SQL Teste - 2019/2020 (JANEIRO)

1)
select clan.name as "Clã Adversário", battle.location as "Local da batalha", to_char(battle.battleDate, 'YYYY-MM-DD HH:MM') as "Data da batalha"
from clan, battle
where clan.idclan = battle.idclan1 and to_char(battle.battleDate, 'YYYY') = 2019 and UPPER (player.username) = "SCAR FACE" and player.idclan = clan.idclan
and clan.region = (SELECT clan.region
					from clan, battle
					where clan.idclan = battle.idclan2)
order by battle.battleDate desc;

2)
select clan.name as "Nome do Clã", player.name as "Nome do jogador", to_char(playerAttack.attackDate, 'YYYY-MM-DD HH:MM') as "Data Ataque em que foi morto"
from clan, player, playerAttack
where UPPER (battle.location) LIKE "%SOUTH%BAY%" and to_char(sysdate, 'YYYY') - to_Char(battle.battleDate, 'YYYY') = 1 and to_Char(battle.battleDate, 'MM') = 12
		and UPPER (player.grade) LIKE "%ROCKIE%" and player.idplayer = playerAttack.idplayer2 and playerAttack.healthRemoved = 100
order by 3 asc;

3)
select player.username as "Nome do Jogador"
from player, playerAttack, battle, clan
where UPPER (battle.location) LIKE "%JOSHUA%HILL%" and player.idClan = clan.idClan and UPPER (clan.name) LIKE "%THE%VIKINGS%"
Minus 
		Select player.username
		from player, playerAttack
		Having playerAttack.healthRemoved > min(playerAttack.healthRemoved)
		group by 1
order by 1;

4)
delete from playerAttack
where idPlayer1 = (select idplayer
					from player
					where UPPER (player.username) LIKE "%LAND%LORD%")
or idplayer2 = (select idplayer
				from player
				where UPPER (player.username) LIKE "%LAND%LORD%")
and idbattle = (select idbattle
				from battle
				where UPPER(battle.location) LIKE "%SOUTH%BAY%");

5)
alter table Battle
    add constraint check_coinsPrize_isPositive CHECK (coinsPrize > 0);
    add constraint PK_idBattle PRIMARY KEY (idBattle);
    add constraint FK_Clan_Battle_1 FOREIGN KEY (idClan1)
        references Clan(idClan);
    add constraint FK_Clan_Battle_2 FOREIGN KEY (idClan2)
        references Clan(idClan);
		





SQL Teste - 2019/2020 (FEVEREIRO)

1)
SELECT clan.name, battle.location, to_char(battle.battleDate, 'YYYY-MM-DD HH:MM')
FROM clan, battle, player, playerAttack
WHERE UPPER (player.username) LIKE "%IRON%SKULL%" and clan.idclan = battle.idclan1 and player.idplayer = playerAttack.idplayer2
and clan.region = (SELECT clan.region
					from clan, battle
					where clan.idclan = battle.idclan1)
ORDER BY 3 desc;

2)
SELECT battle.battleDate, battle.location, count(playerAttack.idbattle), count(playerAttack.idplayer1), count(playerAttack.idplayer2)
FROM battle, playerAttack
WHERE player.idplayer = playerAttack.idplayer1 or player.idplayer = playerAttack.idplayer2 
GROUP BY 1,2
HAVING count(playerAttack.idbattle) > 30
ORDER BY 1;

5)
CREATE table Battle(
	IdBattle NUMBER(3) NOT NULL,
	idClan1  NUMBER(3) NOT NULL,
	idClan2  NUMBER(3) NOT NULL,
	battleDate DATE NOT NULL,
	location VARCHAR(30) NOT NULL,
	CoinsPrize NUMBER(3) NOT NULL,
	CONSTRAINT PK_BATTLE PRIMARY KEY (IdBattle),
	CONSTRAINT FK_BATTLE FOREIGN KEY (idClan1, idClan2) REFERENCES clan(idClan),
	CONSTRAINT CK_BATTLE_COINSPRIZE CHECK(CoinsPrize BETWEEN 0 and 200),
	CONSTRAINT CK_BATTLE_LOCATION CHECK(UPPER(location) = location));